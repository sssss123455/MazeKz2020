@using WebMaze.Models.Morgue
@model RitualServiceViewModel
@section Styles {
    <link rel="stylesheet" href="~/css/Morgue.css?t=@DateTime.Now.Ticks" />
}
@section Scripts{
    <script src="~/js/morgue.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
   
}
<div>
    <h2 class="font-weight-light">Добавить новую ритуальную услугу</h2>
</div>
<form id="set_onbeforeunload" action="@Url.Action("AddRitualService", "Morgue")" method="post" enctype="multipart/form-data">
    <div class="form-group">
        @Html.DisplayNameFor(x => x.BurialType)
        @Html.DropDownListFor(x => x.BurialType, Html.GetEnumSelectList<WebMaze.DbStuff.Model.Morgue.RitualService.BurialTypes>(), "Выберите тип", new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.BurialType)
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.Price)
        @Html.EditorFor(x => x.Price, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Price)
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.Description)
        @Html.TextBoxFor(x => x.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Description)
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(x => x.UrlPhoto)
        <input class="form-control-file" type="file" name="Photo" />
        @Html.ValidationMessageFor(x => x.Photo)
    </div>
    <div>
        <input class="btn btn-outline-secondary" type="submit" value="Сохранить" />
    </div>
</form>